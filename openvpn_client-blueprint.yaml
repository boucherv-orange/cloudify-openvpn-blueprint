tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.3/plugin.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3.1/plugin.yaml
  - https://raw.githubusercontent.com/boucherv-orange/cloudify-openstack-adds-plugin/master/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.1/plugin.yaml

inputs:
  agent_user:
    description: User name used when SSH-ing into the started machine

  image_id:
    description: Openstack image name or id to use for the new server

  flavor_id:
    description: Openstack flavor name or id to use for the new server

  openvpn_server_ip:
    type: string

  remote_network:
    default: 10.67.79.0/24
    type: string

  management_subnet_name:
    default: cloudify-management-network-subnet
    type: string

node_templates:

  openvpn_host:
    type: cloudify.openstack.nodes.Server
    properties:
      cloudify_agent:
        user: { get_input: agent_user }
      image: { get_input: image_id }
      flavor: { get_input: flavor_id }
    relationships:
      - type: cloudify.openstack.server_connected_to_security_group
        target: openvpn_security_group
    interfaces:
      ###########################################################
      # We are infact telling cloudify to install a diamond
      # monitoring agent on the server.
      #
      # (see https://github.com/BrightcoveOS/Diamond)
      ###########################################################
      cloudify.interfaces.monitoring_agent:
          install:
            implementation: diamond.diamond_agent.tasks.install
            inputs:
              diamond_config:
                interval: 1
          start: diamond.diamond_agent.tasks.start
          stop: diamond.diamond_agent.tasks.stop
          uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                  CPUCollector: {}
                  MemoryCollector: {}
                  LoadAverageCollector: {}
                  DiskUsageCollector:
                    config:
                      devices: x?vd[a-z]+[0-9]*$
                  NetworkCollector: {}

  openvpn:
    type: cloudify.nodes.SoftwareComponent
    relationships:
      - type: cloudify.relationships.contained_in
        target: openvpn_host
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/install-client.sh
            process:
              env:
                OPENVPN_SERVER_IP: { get_input: openvpn_server_ip }
        start: scripts/start-client.sh

  openvpn_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties: 
      security_group:
        name: openvpn_sg
        description: SSH OPENVPN
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 22
        - remote_ip_prefix: 10.67.0.0/16
          port_range_min: 1
          port_range_max: 65535

  management_subnet:
    type: cloudify.openstack_adds.nodes.Subnet
    properties:
      resource_id: { get_input: management_subnet_name }
      use_external_resource: true
      subnet:
        host_routes:
          - destination: { get_input: remote_network }
            nexthop: { get_attribute: [ openvpn_host, ip ] }